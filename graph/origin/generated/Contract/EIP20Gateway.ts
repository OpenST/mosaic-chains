// THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.

import {
  EthereumCall,
  EthereumEvent,
  SmartContract,
  EthereumValue,
  JSONValue,
  TypedMap,
  Entity,
  EthereumTuple,
  Bytes,
  Address,
  BigInt
} from "@graphprotocol/graph-ts";

export class StakeIntentDeclared extends EthereumEvent {
  get params(): StakeIntentDeclared__Params {
    return new StakeIntentDeclared__Params(this);
  }
}

export class StakeIntentDeclared__Params {
  _event: StakeIntentDeclared;

  constructor(event: StakeIntentDeclared) {
    this._event = event;
  }

  get _messageHash(): Bytes {
    return this._event.parameters[0].value.toBytes();
  }

  get _staker(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get _stakerNonce(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }

  get _beneficiary(): Address {
    return this._event.parameters[3].value.toAddress();
  }

  get _amount(): BigInt {
    return this._event.parameters[4].value.toBigInt();
  }
}

export class StakeProgressed extends EthereumEvent {
  get params(): StakeProgressed__Params {
    return new StakeProgressed__Params(this);
  }
}

export class StakeProgressed__Params {
  _event: StakeProgressed;

  constructor(event: StakeProgressed) {
    this._event = event;
  }

  get _messageHash(): Bytes {
    return this._event.parameters[0].value.toBytes();
  }

  get _staker(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get _stakerNonce(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }

  get _amount(): BigInt {
    return this._event.parameters[3].value.toBigInt();
  }

  get _proofProgress(): boolean {
    return this._event.parameters[4].value.toBoolean();
  }

  get _unlockSecret(): Bytes {
    return this._event.parameters[5].value.toBytes();
  }
}

export class RevertStakeIntentDeclared extends EthereumEvent {
  get params(): RevertStakeIntentDeclared__Params {
    return new RevertStakeIntentDeclared__Params(this);
  }
}

export class RevertStakeIntentDeclared__Params {
  _event: RevertStakeIntentDeclared;

  constructor(event: RevertStakeIntentDeclared) {
    this._event = event;
  }

  get _messageHash(): Bytes {
    return this._event.parameters[0].value.toBytes();
  }

  get _staker(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get _stakerNonce(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }

  get _amount(): BigInt {
    return this._event.parameters[3].value.toBigInt();
  }
}

export class StakeReverted extends EthereumEvent {
  get params(): StakeReverted__Params {
    return new StakeReverted__Params(this);
  }
}

export class StakeReverted__Params {
  _event: StakeReverted;

  constructor(event: StakeReverted) {
    this._event = event;
  }

  get _messageHash(): Bytes {
    return this._event.parameters[0].value.toBytes();
  }

  get _staker(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get _stakerNonce(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }

  get _amount(): BigInt {
    return this._event.parameters[3].value.toBigInt();
  }
}

export class RedeemIntentConfirmed extends EthereumEvent {
  get params(): RedeemIntentConfirmed__Params {
    return new RedeemIntentConfirmed__Params(this);
  }
}

export class RedeemIntentConfirmed__Params {
  _event: RedeemIntentConfirmed;

  constructor(event: RedeemIntentConfirmed) {
    this._event = event;
  }

  get _messageHash(): Bytes {
    return this._event.parameters[0].value.toBytes();
  }

  get _redeemer(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get _redeemerNonce(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }

  get _beneficiary(): Address {
    return this._event.parameters[3].value.toAddress();
  }

  get _amount(): BigInt {
    return this._event.parameters[4].value.toBigInt();
  }

  get _blockHeight(): BigInt {
    return this._event.parameters[5].value.toBigInt();
  }

  get _hashLock(): Bytes {
    return this._event.parameters[6].value.toBytes();
  }
}

export class UnstakeProgressed extends EthereumEvent {
  get params(): UnstakeProgressed__Params {
    return new UnstakeProgressed__Params(this);
  }
}

export class UnstakeProgressed__Params {
  _event: UnstakeProgressed;

  constructor(event: UnstakeProgressed) {
    this._event = event;
  }

  get _messageHash(): Bytes {
    return this._event.parameters[0].value.toBytes();
  }

  get _redeemer(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get _beneficiary(): Address {
    return this._event.parameters[2].value.toAddress();
  }

  get _redeemAmount(): BigInt {
    return this._event.parameters[3].value.toBigInt();
  }

  get _unstakeAmount(): BigInt {
    return this._event.parameters[4].value.toBigInt();
  }

  get _rewardAmount(): BigInt {
    return this._event.parameters[5].value.toBigInt();
  }

  get _proofProgress(): boolean {
    return this._event.parameters[6].value.toBoolean();
  }

  get _unlockSecret(): Bytes {
    return this._event.parameters[7].value.toBytes();
  }
}

export class RevertRedeemIntentConfirmed extends EthereumEvent {
  get params(): RevertRedeemIntentConfirmed__Params {
    return new RevertRedeemIntentConfirmed__Params(this);
  }
}

export class RevertRedeemIntentConfirmed__Params {
  _event: RevertRedeemIntentConfirmed;

  constructor(event: RevertRedeemIntentConfirmed) {
    this._event = event;
  }

  get _messageHash(): Bytes {
    return this._event.parameters[0].value.toBytes();
  }

  get _redeemer(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get _redeemerNonce(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }

  get _amount(): BigInt {
    return this._event.parameters[3].value.toBigInt();
  }
}

export class RevertRedeemComplete extends EthereumEvent {
  get params(): RevertRedeemComplete__Params {
    return new RevertRedeemComplete__Params(this);
  }
}

export class RevertRedeemComplete__Params {
  _event: RevertRedeemComplete;

  constructor(event: RevertRedeemComplete) {
    this._event = event;
  }

  get _messageHash(): Bytes {
    return this._event.parameters[0].value.toBytes();
  }

  get _redeemer(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get _redeemerNonce(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }

  get _amount(): BigInt {
    return this._event.parameters[3].value.toBigInt();
  }
}

export class GatewayProven extends EthereumEvent {
  get params(): GatewayProven__Params {
    return new GatewayProven__Params(this);
  }
}

export class GatewayProven__Params {
  _event: GatewayProven;

  constructor(event: GatewayProven) {
    this._event = event;
  }

  get _gateway(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get _blockHeight(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }

  get _storageRoot(): Bytes {
    return this._event.parameters[2].value.toBytes();
  }

  get _wasAlreadyProved(): boolean {
    return this._event.parameters[3].value.toBoolean();
  }
}

export class BountyChangeInitiated extends EthereumEvent {
  get params(): BountyChangeInitiated__Params {
    return new BountyChangeInitiated__Params(this);
  }
}

export class BountyChangeInitiated__Params {
  _event: BountyChangeInitiated;

  constructor(event: BountyChangeInitiated) {
    this._event = event;
  }

  get _currentBounty(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get _proposedBounty(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }

  get _unlockHeight(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }
}

export class BountyChangeConfirmed extends EthereumEvent {
  get params(): BountyChangeConfirmed__Params {
    return new BountyChangeConfirmed__Params(this);
  }
}

export class BountyChangeConfirmed__Params {
  _event: BountyChangeConfirmed;

  constructor(event: BountyChangeConfirmed) {
    this._event = event;
  }

  get _currentBounty(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get _changedBounty(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }
}

export class Contract__getOutboxActiveProcessResult {
  value0: Bytes;
  value1: i32;

  constructor(value0: Bytes, value1: i32) {
    this.value0 = value0;
    this.value1 = value1;
  }

  toMap(): TypedMap<string, EthereumValue> {
    let map = new TypedMap<string, EthereumValue>();
    map.set("value0", EthereumValue.fromFixedBytes(this.value0));
    map.set("value1", EthereumValue.fromI32(this.value1));
    return map;
  }
}

export class Contract__messagesResult {
  value0: Bytes;
  value1: BigInt;
  value2: BigInt;
  value3: BigInt;
  value4: Address;
  value5: Bytes;
  value6: BigInt;

  constructor(
    value0: Bytes,
    value1: BigInt,
    value2: BigInt,
    value3: BigInt,
    value4: Address,
    value5: Bytes,
    value6: BigInt
  ) {
    this.value0 = value0;
    this.value1 = value1;
    this.value2 = value2;
    this.value3 = value3;
    this.value4 = value4;
    this.value5 = value5;
    this.value6 = value6;
  }

  toMap(): TypedMap<string, EthereumValue> {
    let map = new TypedMap<string, EthereumValue>();
    map.set("value0", EthereumValue.fromFixedBytes(this.value0));
    map.set("value1", EthereumValue.fromUnsignedBigInt(this.value1));
    map.set("value2", EthereumValue.fromUnsignedBigInt(this.value2));
    map.set("value3", EthereumValue.fromUnsignedBigInt(this.value3));
    map.set("value4", EthereumValue.fromAddress(this.value4));
    map.set("value5", EthereumValue.fromFixedBytes(this.value5));
    map.set("value6", EthereumValue.fromUnsignedBigInt(this.value6));
    return map;
  }
}

export class Contract__getInboxActiveProcessResult {
  value0: Bytes;
  value1: i32;

  constructor(value0: Bytes, value1: i32) {
    this.value0 = value0;
    this.value1 = value1;
  }

  toMap(): TypedMap<string, EthereumValue> {
    let map = new TypedMap<string, EthereumValue>();
    map.set("value0", EthereumValue.fromFixedBytes(this.value0));
    map.set("value1", EthereumValue.fromI32(this.value1));
    return map;
  }
}

export class Contract extends SmartContract {
  static bind(address: Address): Contract {
    return new Contract("Contract", address);
  }

  proposedBountyUnlockHeight(): BigInt {
    let result = super.call("proposedBountyUnlockHeight", []);
    return result[0].toBigInt();
  }

  getOutboxActiveProcess(
    _account: Address
  ): Contract__getOutboxActiveProcessResult {
    let result = super.call("getOutboxActiveProcess", [
      EthereumValue.fromAddress(_account)
    ]);
    return new Contract__getOutboxActiveProcessResult(
      result[0].toBytes(),
      result[1].toI32()
    );
  }

  activated(): boolean {
    let result = super.call("activated", []);
    return result[0].toBoolean();
  }

  organization(): Address {
    let result = super.call("organization", []);
    return result[0].toAddress();
  }

  burner(): Address {
    let result = super.call("burner", []);
    return result[0].toAddress();
  }

  messages(param0: Bytes): Contract__messagesResult {
    let result = super.call("messages", [EthereumValue.fromFixedBytes(param0)]);
    return new Contract__messagesResult(
      result[0].toBytes(),
      result[1].toBigInt(),
      result[2].toBigInt(),
      result[3].toBigInt(),
      result[4].toAddress(),
      result[5].toBytes(),
      result[6].toBigInt()
    );
  }

  getNonce(_account: Address): BigInt {
    let result = super.call("getNonce", [EthereumValue.fromAddress(_account)]);
    return result[0].toBigInt();
  }

  stakeVault(): Address {
    let result = super.call("stakeVault", []);
    return result[0].toAddress();
  }

  getInboxMessageStatus(_messageHash: Bytes): i32 {
    let result = super.call("getInboxMessageStatus", [
      EthereumValue.fromFixedBytes(_messageHash)
    ]);
    return result[0].toI32();
  }

  remoteGateway(): Address {
    let result = super.call("remoteGateway", []);
    return result[0].toAddress();
  }

  BOUNTY_CHANGE_UNLOCK_PERIOD(): BigInt {
    let result = super.call("BOUNTY_CHANGE_UNLOCK_PERIOD", []);
    return result[0].toBigInt();
  }

  bounty(): BigInt {
    let result = super.call("bounty", []);
    return result[0].toBigInt();
  }

  proposedBounty(): BigInt {
    let result = super.call("proposedBounty", []);
    return result[0].toBigInt();
  }

  getInboxActiveProcess(
    _account: Address
  ): Contract__getInboxActiveProcessResult {
    let result = super.call("getInboxActiveProcess", [
      EthereumValue.fromAddress(_account)
    ]);
    return new Contract__getInboxActiveProcessResult(
      result[0].toBytes(),
      result[1].toI32()
    );
  }

  getOutboxMessageStatus(_messageHash: Bytes): i32 {
    let result = super.call("getOutboxMessageStatus", [
      EthereumValue.fromFixedBytes(_messageHash)
    ]);
    return result[0].toI32();
  }

  encodedGatewayPath(): Bytes {
    let result = super.call("encodedGatewayPath", []);
    return result[0].toBytes();
  }

  baseToken(): Address {
    let result = super.call("baseToken", []);
    return result[0].toAddress();
  }

  stateRootProvider(): Address {
    let result = super.call("stateRootProvider", []);
    return result[0].toAddress();
  }

  token(): Address {
    let result = super.call("token", []);
    return result[0].toAddress();
  }

  penalty(_messageHash: Bytes): BigInt {
    let result = super.call("penalty", [
      EthereumValue.fromFixedBytes(_messageHash)
    ]);
    return result[0].toBigInt();
  }
}

export class InitiateBountyAmountChangeCall extends EthereumCall {
  get inputs(): InitiateBountyAmountChangeCall__Inputs {
    return new InitiateBountyAmountChangeCall__Inputs(this);
  }

  get outputs(): InitiateBountyAmountChangeCall__Outputs {
    return new InitiateBountyAmountChangeCall__Outputs(this);
  }
}

export class InitiateBountyAmountChangeCall__Inputs {
  _call: InitiateBountyAmountChangeCall;

  constructor(call: InitiateBountyAmountChangeCall) {
    this._call = call;
  }

  get _proposedBounty(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class InitiateBountyAmountChangeCall__Outputs {
  _call: InitiateBountyAmountChangeCall;

  constructor(call: InitiateBountyAmountChangeCall) {
    this._call = call;
  }

  get value0(): BigInt {
    return this._call.outputValues[0].value.toBigInt();
  }
}

export class ProveGatewayCall extends EthereumCall {
  get inputs(): ProveGatewayCall__Inputs {
    return new ProveGatewayCall__Inputs(this);
  }

  get outputs(): ProveGatewayCall__Outputs {
    return new ProveGatewayCall__Outputs(this);
  }
}

export class ProveGatewayCall__Inputs {
  _call: ProveGatewayCall;

  constructor(call: ProveGatewayCall) {
    this._call = call;
  }

  get _blockHeight(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get _rlpAccount(): Bytes {
    return this._call.inputValues[1].value.toBytes();
  }

  get _rlpParentNodes(): Bytes {
    return this._call.inputValues[2].value.toBytes();
  }
}

export class ProveGatewayCall__Outputs {
  _call: ProveGatewayCall;

  constructor(call: ProveGatewayCall) {
    this._call = call;
  }

  get value0(): boolean {
    return this._call.outputValues[0].value.toBoolean();
  }
}

export class ConfirmBountyAmountChangeCall extends EthereumCall {
  get inputs(): ConfirmBountyAmountChangeCall__Inputs {
    return new ConfirmBountyAmountChangeCall__Inputs(this);
  }

  get outputs(): ConfirmBountyAmountChangeCall__Outputs {
    return new ConfirmBountyAmountChangeCall__Outputs(this);
  }
}

export class ConfirmBountyAmountChangeCall__Inputs {
  _call: ConfirmBountyAmountChangeCall;

  constructor(call: ConfirmBountyAmountChangeCall) {
    this._call = call;
  }
}

export class ConfirmBountyAmountChangeCall__Outputs {
  _call: ConfirmBountyAmountChangeCall;

  constructor(call: ConfirmBountyAmountChangeCall) {
    this._call = call;
  }

  get changedBountyAmount_(): BigInt {
    return this._call.outputValues[0].value.toBigInt();
  }

  get previousBountyAmount_(): BigInt {
    return this._call.outputValues[1].value.toBigInt();
  }
}

export class ConstructorCall extends EthereumCall {
  get inputs(): ConstructorCall__Inputs {
    return new ConstructorCall__Inputs(this);
  }

  get outputs(): ConstructorCall__Outputs {
    return new ConstructorCall__Outputs(this);
  }
}

export class ConstructorCall__Inputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }

  get _token(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get _baseToken(): Address {
    return this._call.inputValues[1].value.toAddress();
  }

  get _stateRootProvider(): Address {
    return this._call.inputValues[2].value.toAddress();
  }

  get _bounty(): BigInt {
    return this._call.inputValues[3].value.toBigInt();
  }

  get _organization(): Address {
    return this._call.inputValues[4].value.toAddress();
  }

  get _burner(): Address {
    return this._call.inputValues[5].value.toAddress();
  }
}

export class ConstructorCall__Outputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }
}

export class StakeCall extends EthereumCall {
  get inputs(): StakeCall__Inputs {
    return new StakeCall__Inputs(this);
  }

  get outputs(): StakeCall__Outputs {
    return new StakeCall__Outputs(this);
  }
}

export class StakeCall__Inputs {
  _call: StakeCall;

  constructor(call: StakeCall) {
    this._call = call;
  }

  get _amount(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get _beneficiary(): Address {
    return this._call.inputValues[1].value.toAddress();
  }

  get _gasPrice(): BigInt {
    return this._call.inputValues[2].value.toBigInt();
  }

  get _gasLimit(): BigInt {
    return this._call.inputValues[3].value.toBigInt();
  }

  get _nonce(): BigInt {
    return this._call.inputValues[4].value.toBigInt();
  }

  get _hashLock(): Bytes {
    return this._call.inputValues[5].value.toBytes();
  }
}

export class StakeCall__Outputs {
  _call: StakeCall;

  constructor(call: StakeCall) {
    this._call = call;
  }

  get messageHash_(): Bytes {
    return this._call.outputValues[0].value.toBytes();
  }
}

export class ProgressStakeCall extends EthereumCall {
  get inputs(): ProgressStakeCall__Inputs {
    return new ProgressStakeCall__Inputs(this);
  }

  get outputs(): ProgressStakeCall__Outputs {
    return new ProgressStakeCall__Outputs(this);
  }
}

export class ProgressStakeCall__Inputs {
  _call: ProgressStakeCall;

  constructor(call: ProgressStakeCall) {
    this._call = call;
  }

  get _messageHash(): Bytes {
    return this._call.inputValues[0].value.toBytes();
  }

  get _unlockSecret(): Bytes {
    return this._call.inputValues[1].value.toBytes();
  }
}

export class ProgressStakeCall__Outputs {
  _call: ProgressStakeCall;

  constructor(call: ProgressStakeCall) {
    this._call = call;
  }

  get staker_(): Address {
    return this._call.outputValues[0].value.toAddress();
  }

  get stakeAmount_(): BigInt {
    return this._call.outputValues[1].value.toBigInt();
  }
}

export class ProgressStakeWithProofCall extends EthereumCall {
  get inputs(): ProgressStakeWithProofCall__Inputs {
    return new ProgressStakeWithProofCall__Inputs(this);
  }

  get outputs(): ProgressStakeWithProofCall__Outputs {
    return new ProgressStakeWithProofCall__Outputs(this);
  }
}

export class ProgressStakeWithProofCall__Inputs {
  _call: ProgressStakeWithProofCall;

  constructor(call: ProgressStakeWithProofCall) {
    this._call = call;
  }

  get _messageHash(): Bytes {
    return this._call.inputValues[0].value.toBytes();
  }

  get _rlpParentNodes(): Bytes {
    return this._call.inputValues[1].value.toBytes();
  }

  get _blockHeight(): BigInt {
    return this._call.inputValues[2].value.toBigInt();
  }

  get _messageStatus(): BigInt {
    return this._call.inputValues[3].value.toBigInt();
  }
}

export class ProgressStakeWithProofCall__Outputs {
  _call: ProgressStakeWithProofCall;

  constructor(call: ProgressStakeWithProofCall) {
    this._call = call;
  }

  get staker_(): Address {
    return this._call.outputValues[0].value.toAddress();
  }

  get stakeAmount_(): BigInt {
    return this._call.outputValues[1].value.toBigInt();
  }
}

export class RevertStakeCall extends EthereumCall {
  get inputs(): RevertStakeCall__Inputs {
    return new RevertStakeCall__Inputs(this);
  }

  get outputs(): RevertStakeCall__Outputs {
    return new RevertStakeCall__Outputs(this);
  }
}

export class RevertStakeCall__Inputs {
  _call: RevertStakeCall;

  constructor(call: RevertStakeCall) {
    this._call = call;
  }

  get _messageHash(): Bytes {
    return this._call.inputValues[0].value.toBytes();
  }
}

export class RevertStakeCall__Outputs {
  _call: RevertStakeCall;

  constructor(call: RevertStakeCall) {
    this._call = call;
  }

  get staker_(): Address {
    return this._call.outputValues[0].value.toAddress();
  }

  get stakerNonce_(): BigInt {
    return this._call.outputValues[1].value.toBigInt();
  }

  get amount_(): BigInt {
    return this._call.outputValues[2].value.toBigInt();
  }
}

export class ProgressRevertStakeCall extends EthereumCall {
  get inputs(): ProgressRevertStakeCall__Inputs {
    return new ProgressRevertStakeCall__Inputs(this);
  }

  get outputs(): ProgressRevertStakeCall__Outputs {
    return new ProgressRevertStakeCall__Outputs(this);
  }
}

export class ProgressRevertStakeCall__Inputs {
  _call: ProgressRevertStakeCall;

  constructor(call: ProgressRevertStakeCall) {
    this._call = call;
  }

  get _messageHash(): Bytes {
    return this._call.inputValues[0].value.toBytes();
  }

  get _blockHeight(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }

  get _rlpParentNodes(): Bytes {
    return this._call.inputValues[2].value.toBytes();
  }
}

export class ProgressRevertStakeCall__Outputs {
  _call: ProgressRevertStakeCall;

  constructor(call: ProgressRevertStakeCall) {
    this._call = call;
  }

  get staker_(): Address {
    return this._call.outputValues[0].value.toAddress();
  }

  get stakerNonce_(): BigInt {
    return this._call.outputValues[1].value.toBigInt();
  }

  get amount_(): BigInt {
    return this._call.outputValues[2].value.toBigInt();
  }
}

export class ConfirmRedeemIntentCall extends EthereumCall {
  get inputs(): ConfirmRedeemIntentCall__Inputs {
    return new ConfirmRedeemIntentCall__Inputs(this);
  }

  get outputs(): ConfirmRedeemIntentCall__Outputs {
    return new ConfirmRedeemIntentCall__Outputs(this);
  }
}

export class ConfirmRedeemIntentCall__Inputs {
  _call: ConfirmRedeemIntentCall;

  constructor(call: ConfirmRedeemIntentCall) {
    this._call = call;
  }

  get _redeemer(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get _redeemerNonce(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }

  get _beneficiary(): Address {
    return this._call.inputValues[2].value.toAddress();
  }

  get _amount(): BigInt {
    return this._call.inputValues[3].value.toBigInt();
  }

  get _gasPrice(): BigInt {
    return this._call.inputValues[4].value.toBigInt();
  }

  get _gasLimit(): BigInt {
    return this._call.inputValues[5].value.toBigInt();
  }

  get _blockHeight(): BigInt {
    return this._call.inputValues[6].value.toBigInt();
  }

  get _hashLock(): Bytes {
    return this._call.inputValues[7].value.toBytes();
  }

  get _rlpParentNodes(): Bytes {
    return this._call.inputValues[8].value.toBytes();
  }
}

export class ConfirmRedeemIntentCall__Outputs {
  _call: ConfirmRedeemIntentCall;

  constructor(call: ConfirmRedeemIntentCall) {
    this._call = call;
  }

  get messageHash_(): Bytes {
    return this._call.outputValues[0].value.toBytes();
  }
}

export class ProgressUnstakeCall extends EthereumCall {
  get inputs(): ProgressUnstakeCall__Inputs {
    return new ProgressUnstakeCall__Inputs(this);
  }

  get outputs(): ProgressUnstakeCall__Outputs {
    return new ProgressUnstakeCall__Outputs(this);
  }
}

export class ProgressUnstakeCall__Inputs {
  _call: ProgressUnstakeCall;

  constructor(call: ProgressUnstakeCall) {
    this._call = call;
  }

  get _messageHash(): Bytes {
    return this._call.inputValues[0].value.toBytes();
  }

  get _unlockSecret(): Bytes {
    return this._call.inputValues[1].value.toBytes();
  }
}

export class ProgressUnstakeCall__Outputs {
  _call: ProgressUnstakeCall;

  constructor(call: ProgressUnstakeCall) {
    this._call = call;
  }

  get redeemAmount_(): BigInt {
    return this._call.outputValues[0].value.toBigInt();
  }

  get unstakeAmount_(): BigInt {
    return this._call.outputValues[1].value.toBigInt();
  }

  get rewardAmount_(): BigInt {
    return this._call.outputValues[2].value.toBigInt();
  }
}

export class ProgressUnstakeWithProofCall extends EthereumCall {
  get inputs(): ProgressUnstakeWithProofCall__Inputs {
    return new ProgressUnstakeWithProofCall__Inputs(this);
  }

  get outputs(): ProgressUnstakeWithProofCall__Outputs {
    return new ProgressUnstakeWithProofCall__Outputs(this);
  }
}

export class ProgressUnstakeWithProofCall__Inputs {
  _call: ProgressUnstakeWithProofCall;

  constructor(call: ProgressUnstakeWithProofCall) {
    this._call = call;
  }

  get _messageHash(): Bytes {
    return this._call.inputValues[0].value.toBytes();
  }

  get _rlpParentNodes(): Bytes {
    return this._call.inputValues[1].value.toBytes();
  }

  get _blockHeight(): BigInt {
    return this._call.inputValues[2].value.toBigInt();
  }

  get _messageStatus(): BigInt {
    return this._call.inputValues[3].value.toBigInt();
  }
}

export class ProgressUnstakeWithProofCall__Outputs {
  _call: ProgressUnstakeWithProofCall;

  constructor(call: ProgressUnstakeWithProofCall) {
    this._call = call;
  }

  get redeemAmount_(): BigInt {
    return this._call.outputValues[0].value.toBigInt();
  }

  get unstakeAmount_(): BigInt {
    return this._call.outputValues[1].value.toBigInt();
  }

  get rewardAmount_(): BigInt {
    return this._call.outputValues[2].value.toBigInt();
  }
}

export class ConfirmRevertRedeemIntentCall extends EthereumCall {
  get inputs(): ConfirmRevertRedeemIntentCall__Inputs {
    return new ConfirmRevertRedeemIntentCall__Inputs(this);
  }

  get outputs(): ConfirmRevertRedeemIntentCall__Outputs {
    return new ConfirmRevertRedeemIntentCall__Outputs(this);
  }
}

export class ConfirmRevertRedeemIntentCall__Inputs {
  _call: ConfirmRevertRedeemIntentCall;

  constructor(call: ConfirmRevertRedeemIntentCall) {
    this._call = call;
  }

  get _messageHash(): Bytes {
    return this._call.inputValues[0].value.toBytes();
  }

  get _blockHeight(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }

  get _rlpParentNodes(): Bytes {
    return this._call.inputValues[2].value.toBytes();
  }
}

export class ConfirmRevertRedeemIntentCall__Outputs {
  _call: ConfirmRevertRedeemIntentCall;

  constructor(call: ConfirmRevertRedeemIntentCall) {
    this._call = call;
  }

  get redeemer_(): Address {
    return this._call.outputValues[0].value.toAddress();
  }

  get redeemerNonce_(): BigInt {
    return this._call.outputValues[1].value.toBigInt();
  }

  get amount_(): BigInt {
    return this._call.outputValues[2].value.toBigInt();
  }
}

export class ActivateGatewayCall extends EthereumCall {
  get inputs(): ActivateGatewayCall__Inputs {
    return new ActivateGatewayCall__Inputs(this);
  }

  get outputs(): ActivateGatewayCall__Outputs {
    return new ActivateGatewayCall__Outputs(this);
  }
}

export class ActivateGatewayCall__Inputs {
  _call: ActivateGatewayCall;

  constructor(call: ActivateGatewayCall) {
    this._call = call;
  }

  get _coGatewayAddress(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class ActivateGatewayCall__Outputs {
  _call: ActivateGatewayCall;

  constructor(call: ActivateGatewayCall) {
    this._call = call;
  }

  get success_(): boolean {
    return this._call.outputValues[0].value.toBoolean();
  }
}

export class DeactivateGatewayCall extends EthereumCall {
  get inputs(): DeactivateGatewayCall__Inputs {
    return new DeactivateGatewayCall__Inputs(this);
  }

  get outputs(): DeactivateGatewayCall__Outputs {
    return new DeactivateGatewayCall__Outputs(this);
  }
}

export class DeactivateGatewayCall__Inputs {
  _call: DeactivateGatewayCall;

  constructor(call: DeactivateGatewayCall) {
    this._call = call;
  }
}

export class DeactivateGatewayCall__Outputs {
  _call: DeactivateGatewayCall;

  constructor(call: DeactivateGatewayCall) {
    this._call = call;
  }

  get success_(): boolean {
    return this._call.outputValues[0].value.toBoolean();
  }
}
