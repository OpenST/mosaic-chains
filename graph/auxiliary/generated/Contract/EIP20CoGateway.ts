// THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.

import {
  EthereumCall,
  EthereumEvent,
  SmartContract,
  EthereumValue,
  JSONValue,
  TypedMap,
  Entity,
  EthereumTuple,
  Bytes,
  Address,
  BigInt
} from "@graphprotocol/graph-ts";

export class StakeIntentConfirmed extends EthereumEvent {
  get params(): StakeIntentConfirmed__Params {
    return new StakeIntentConfirmed__Params(this);
  }
}

export class StakeIntentConfirmed__Params {
  _event: StakeIntentConfirmed;

  constructor(event: StakeIntentConfirmed) {
    this._event = event;
  }

  get _messageHash(): Bytes {
    return this._event.parameters[0].value.toBytes();
  }

  get _staker(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get _stakerNonce(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }

  get _beneficiary(): Address {
    return this._event.parameters[3].value.toAddress();
  }

  get _amount(): BigInt {
    return this._event.parameters[4].value.toBigInt();
  }

  get _blockHeight(): BigInt {
    return this._event.parameters[5].value.toBigInt();
  }

  get _hashLock(): Bytes {
    return this._event.parameters[6].value.toBytes();
  }
}

export class MintProgressed extends EthereumEvent {
  get params(): MintProgressed__Params {
    return new MintProgressed__Params(this);
  }
}

export class MintProgressed__Params {
  _event: MintProgressed;

  constructor(event: MintProgressed) {
    this._event = event;
  }

  get _messageHash(): Bytes {
    return this._event.parameters[0].value.toBytes();
  }

  get _staker(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get _beneficiary(): Address {
    return this._event.parameters[2].value.toAddress();
  }

  get _stakeAmount(): BigInt {
    return this._event.parameters[3].value.toBigInt();
  }

  get _mintedAmount(): BigInt {
    return this._event.parameters[4].value.toBigInt();
  }

  get _rewardAmount(): BigInt {
    return this._event.parameters[5].value.toBigInt();
  }

  get _proofProgress(): boolean {
    return this._event.parameters[6].value.toBoolean();
  }

  get _unlockSecret(): Bytes {
    return this._event.parameters[7].value.toBytes();
  }
}

export class RevertStakeIntentConfirmed extends EthereumEvent {
  get params(): RevertStakeIntentConfirmed__Params {
    return new RevertStakeIntentConfirmed__Params(this);
  }
}

export class RevertStakeIntentConfirmed__Params {
  _event: RevertStakeIntentConfirmed;

  constructor(event: RevertStakeIntentConfirmed) {
    this._event = event;
  }

  get _messageHash(): Bytes {
    return this._event.parameters[0].value.toBytes();
  }

  get _staker(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get _stakerNonce(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }

  get _amount(): BigInt {
    return this._event.parameters[3].value.toBigInt();
  }
}

export class RevertStakeProgressed extends EthereumEvent {
  get params(): RevertStakeProgressed__Params {
    return new RevertStakeProgressed__Params(this);
  }
}

export class RevertStakeProgressed__Params {
  _event: RevertStakeProgressed;

  constructor(event: RevertStakeProgressed) {
    this._event = event;
  }

  get _messageHash(): Bytes {
    return this._event.parameters[0].value.toBytes();
  }

  get _staker(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get _stakerNonce(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }

  get _amount(): BigInt {
    return this._event.parameters[3].value.toBigInt();
  }
}

export class RedeemIntentDeclared extends EthereumEvent {
  get params(): RedeemIntentDeclared__Params {
    return new RedeemIntentDeclared__Params(this);
  }
}

export class RedeemIntentDeclared__Params {
  _event: RedeemIntentDeclared;

  constructor(event: RedeemIntentDeclared) {
    this._event = event;
  }

  get _messageHash(): Bytes {
    return this._event.parameters[0].value.toBytes();
  }

  get _redeemer(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get _redeemerNonce(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }

  get _beneficiary(): Address {
    return this._event.parameters[3].value.toAddress();
  }

  get _amount(): BigInt {
    return this._event.parameters[4].value.toBigInt();
  }
}

export class RedeemProgressed extends EthereumEvent {
  get params(): RedeemProgressed__Params {
    return new RedeemProgressed__Params(this);
  }
}

export class RedeemProgressed__Params {
  _event: RedeemProgressed;

  constructor(event: RedeemProgressed) {
    this._event = event;
  }

  get _messageHash(): Bytes {
    return this._event.parameters[0].value.toBytes();
  }

  get _redeemer(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get _redeemerNonce(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }

  get _amount(): BigInt {
    return this._event.parameters[3].value.toBigInt();
  }

  get _proofProgress(): boolean {
    return this._event.parameters[4].value.toBoolean();
  }

  get _unlockSecret(): Bytes {
    return this._event.parameters[5].value.toBytes();
  }
}

export class RevertRedeemDeclared extends EthereumEvent {
  get params(): RevertRedeemDeclared__Params {
    return new RevertRedeemDeclared__Params(this);
  }
}

export class RevertRedeemDeclared__Params {
  _event: RevertRedeemDeclared;

  constructor(event: RevertRedeemDeclared) {
    this._event = event;
  }

  get _messageHash(): Bytes {
    return this._event.parameters[0].value.toBytes();
  }

  get _redeemer(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get _redeemerNonce(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }

  get _amount(): BigInt {
    return this._event.parameters[3].value.toBigInt();
  }
}

export class RedeemReverted extends EthereumEvent {
  get params(): RedeemReverted__Params {
    return new RedeemReverted__Params(this);
  }
}

export class RedeemReverted__Params {
  _event: RedeemReverted;

  constructor(event: RedeemReverted) {
    this._event = event;
  }

  get _messageHash(): Bytes {
    return this._event.parameters[0].value.toBytes();
  }

  get _redeemer(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get _redeemerNonce(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }

  get _amount(): BigInt {
    return this._event.parameters[3].value.toBigInt();
  }
}

export class GatewayProven extends EthereumEvent {
  get params(): GatewayProven__Params {
    return new GatewayProven__Params(this);
  }
}

export class GatewayProven__Params {
  _event: GatewayProven;

  constructor(event: GatewayProven) {
    this._event = event;
  }

  get _gateway(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get _blockHeight(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }

  get _storageRoot(): Bytes {
    return this._event.parameters[2].value.toBytes();
  }

  get _wasAlreadyProved(): boolean {
    return this._event.parameters[3].value.toBoolean();
  }
}

export class BountyChangeInitiated extends EthereumEvent {
  get params(): BountyChangeInitiated__Params {
    return new BountyChangeInitiated__Params(this);
  }
}

export class BountyChangeInitiated__Params {
  _event: BountyChangeInitiated;

  constructor(event: BountyChangeInitiated) {
    this._event = event;
  }

  get _currentBounty(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get _proposedBounty(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }

  get _unlockHeight(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }
}

export class BountyChangeConfirmed extends EthereumEvent {
  get params(): BountyChangeConfirmed__Params {
    return new BountyChangeConfirmed__Params(this);
  }
}

export class BountyChangeConfirmed__Params {
  _event: BountyChangeConfirmed;

  constructor(event: BountyChangeConfirmed) {
    this._event = event;
  }

  get _currentBounty(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get _changedBounty(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }
}

export class Contract__getOutboxActiveProcessResult {
  value0: Bytes;
  value1: i32;

  constructor(value0: Bytes, value1: i32) {
    this.value0 = value0;
    this.value1 = value1;
  }

  toMap(): TypedMap<string, EthereumValue> {
    let map = new TypedMap<string, EthereumValue>();
    map.set("value0", EthereumValue.fromFixedBytes(this.value0));
    map.set("value1", EthereumValue.fromI32(this.value1));
    return map;
  }
}

export class Contract__messagesResult {
  value0: Bytes;
  value1: BigInt;
  value2: BigInt;
  value3: BigInt;
  value4: Address;
  value5: Bytes;
  value6: BigInt;

  constructor(
    value0: Bytes,
    value1: BigInt,
    value2: BigInt,
    value3: BigInt,
    value4: Address,
    value5: Bytes,
    value6: BigInt
  ) {
    this.value0 = value0;
    this.value1 = value1;
    this.value2 = value2;
    this.value3 = value3;
    this.value4 = value4;
    this.value5 = value5;
    this.value6 = value6;
  }

  toMap(): TypedMap<string, EthereumValue> {
    let map = new TypedMap<string, EthereumValue>();
    map.set("value0", EthereumValue.fromFixedBytes(this.value0));
    map.set("value1", EthereumValue.fromUnsignedBigInt(this.value1));
    map.set("value2", EthereumValue.fromUnsignedBigInt(this.value2));
    map.set("value3", EthereumValue.fromUnsignedBigInt(this.value3));
    map.set("value4", EthereumValue.fromAddress(this.value4));
    map.set("value5", EthereumValue.fromFixedBytes(this.value5));
    map.set("value6", EthereumValue.fromUnsignedBigInt(this.value6));
    return map;
  }
}

export class Contract__mintsResult {
  value0: BigInt;
  value1: Address;

  constructor(value0: BigInt, value1: Address) {
    this.value0 = value0;
    this.value1 = value1;
  }

  toMap(): TypedMap<string, EthereumValue> {
    let map = new TypedMap<string, EthereumValue>();
    map.set("value0", EthereumValue.fromUnsignedBigInt(this.value0));
    map.set("value1", EthereumValue.fromAddress(this.value1));
    return map;
  }
}

export class Contract__redeemsResult {
  value0: BigInt;
  value1: Address;
  value2: BigInt;

  constructor(value0: BigInt, value1: Address, value2: BigInt) {
    this.value0 = value0;
    this.value1 = value1;
    this.value2 = value2;
  }

  toMap(): TypedMap<string, EthereumValue> {
    let map = new TypedMap<string, EthereumValue>();
    map.set("value0", EthereumValue.fromUnsignedBigInt(this.value0));
    map.set("value1", EthereumValue.fromAddress(this.value1));
    map.set("value2", EthereumValue.fromUnsignedBigInt(this.value2));
    return map;
  }
}

export class Contract__getInboxActiveProcessResult {
  value0: Bytes;
  value1: i32;

  constructor(value0: Bytes, value1: i32) {
    this.value0 = value0;
    this.value1 = value1;
  }

  toMap(): TypedMap<string, EthereumValue> {
    let map = new TypedMap<string, EthereumValue>();
    map.set("value0", EthereumValue.fromFixedBytes(this.value0));
    map.set("value1", EthereumValue.fromI32(this.value1));
    return map;
  }
}

export class Contract extends SmartContract {
  static bind(address: Address): Contract {
    return new Contract("Contract", address);
  }

  proposedBountyUnlockHeight(): BigInt {
    let result = super.call("proposedBountyUnlockHeight", []);
    return result[0].toBigInt();
  }

  getOutboxActiveProcess(
    _account: Address
  ): Contract__getOutboxActiveProcessResult {
    let result = super.call("getOutboxActiveProcess", [
      EthereumValue.fromAddress(_account)
    ]);
    return new Contract__getOutboxActiveProcessResult(
      result[0].toBytes(),
      result[1].toI32()
    );
  }

  organization(): Address {
    let result = super.call("organization", []);
    return result[0].toAddress();
  }

  burner(): Address {
    let result = super.call("burner", []);
    return result[0].toAddress();
  }

  messages(param0: Bytes): Contract__messagesResult {
    let result = super.call("messages", [EthereumValue.fromFixedBytes(param0)]);
    return new Contract__messagesResult(
      result[0].toBytes(),
      result[1].toBigInt(),
      result[2].toBigInt(),
      result[3].toBigInt(),
      result[4].toAddress(),
      result[5].toBytes(),
      result[6].toBigInt()
    );
  }

  getNonce(_account: Address): BigInt {
    let result = super.call("getNonce", [EthereumValue.fromAddress(_account)]);
    return result[0].toBigInt();
  }

  getInboxMessageStatus(_messageHash: Bytes): i32 {
    let result = super.call("getInboxMessageStatus", [
      EthereumValue.fromFixedBytes(_messageHash)
    ]);
    return result[0].toI32();
  }

  mints(param0: Bytes): Contract__mintsResult {
    let result = super.call("mints", [EthereumValue.fromFixedBytes(param0)]);
    return new Contract__mintsResult(
      result[0].toBigInt(),
      result[1].toAddress()
    );
  }

  remoteGateway(): Address {
    let result = super.call("remoteGateway", []);
    return result[0].toAddress();
  }

  redeems(param0: Bytes): Contract__redeemsResult {
    let result = super.call("redeems", [EthereumValue.fromFixedBytes(param0)]);
    return new Contract__redeemsResult(
      result[0].toBigInt(),
      result[1].toAddress(),
      result[2].toBigInt()
    );
  }

  BOUNTY_CHANGE_UNLOCK_PERIOD(): BigInt {
    let result = super.call("BOUNTY_CHANGE_UNLOCK_PERIOD", []);
    return result[0].toBigInt();
  }

  bounty(): BigInt {
    let result = super.call("bounty", []);
    return result[0].toBigInt();
  }

  proposedBounty(): BigInt {
    let result = super.call("proposedBounty", []);
    return result[0].toBigInt();
  }

  getInboxActiveProcess(
    _account: Address
  ): Contract__getInboxActiveProcessResult {
    let result = super.call("getInboxActiveProcess", [
      EthereumValue.fromAddress(_account)
    ]);
    return new Contract__getInboxActiveProcessResult(
      result[0].toBytes(),
      result[1].toI32()
    );
  }

  utilityToken(): Address {
    let result = super.call("utilityToken", []);
    return result[0].toAddress();
  }

  getOutboxMessageStatus(_messageHash: Bytes): i32 {
    let result = super.call("getOutboxMessageStatus", [
      EthereumValue.fromFixedBytes(_messageHash)
    ]);
    return result[0].toI32();
  }

  encodedGatewayPath(): Bytes {
    let result = super.call("encodedGatewayPath", []);
    return result[0].toBytes();
  }

  stateRootProvider(): Address {
    let result = super.call("stateRootProvider", []);
    return result[0].toAddress();
  }

  valueToken(): Address {
    let result = super.call("valueToken", []);
    return result[0].toAddress();
  }

  penalty(_messageHash: Bytes): BigInt {
    let result = super.call("penalty", [
      EthereumValue.fromFixedBytes(_messageHash)
    ]);
    return result[0].toBigInt();
  }
}

export class InitiateBountyAmountChangeCall extends EthereumCall {
  get inputs(): InitiateBountyAmountChangeCall__Inputs {
    return new InitiateBountyAmountChangeCall__Inputs(this);
  }

  get outputs(): InitiateBountyAmountChangeCall__Outputs {
    return new InitiateBountyAmountChangeCall__Outputs(this);
  }
}

export class InitiateBountyAmountChangeCall__Inputs {
  _call: InitiateBountyAmountChangeCall;

  constructor(call: InitiateBountyAmountChangeCall) {
    this._call = call;
  }

  get _proposedBounty(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class InitiateBountyAmountChangeCall__Outputs {
  _call: InitiateBountyAmountChangeCall;

  constructor(call: InitiateBountyAmountChangeCall) {
    this._call = call;
  }

  get value0(): BigInt {
    return this._call.outputValues[0].value.toBigInt();
  }
}

export class ProveGatewayCall extends EthereumCall {
  get inputs(): ProveGatewayCall__Inputs {
    return new ProveGatewayCall__Inputs(this);
  }

  get outputs(): ProveGatewayCall__Outputs {
    return new ProveGatewayCall__Outputs(this);
  }
}

export class ProveGatewayCall__Inputs {
  _call: ProveGatewayCall;

  constructor(call: ProveGatewayCall) {
    this._call = call;
  }

  get _blockHeight(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get _rlpAccount(): Bytes {
    return this._call.inputValues[1].value.toBytes();
  }

  get _rlpParentNodes(): Bytes {
    return this._call.inputValues[2].value.toBytes();
  }
}

export class ProveGatewayCall__Outputs {
  _call: ProveGatewayCall;

  constructor(call: ProveGatewayCall) {
    this._call = call;
  }

  get value0(): boolean {
    return this._call.outputValues[0].value.toBoolean();
  }
}

export class ConfirmBountyAmountChangeCall extends EthereumCall {
  get inputs(): ConfirmBountyAmountChangeCall__Inputs {
    return new ConfirmBountyAmountChangeCall__Inputs(this);
  }

  get outputs(): ConfirmBountyAmountChangeCall__Outputs {
    return new ConfirmBountyAmountChangeCall__Outputs(this);
  }
}

export class ConfirmBountyAmountChangeCall__Inputs {
  _call: ConfirmBountyAmountChangeCall;

  constructor(call: ConfirmBountyAmountChangeCall) {
    this._call = call;
  }
}

export class ConfirmBountyAmountChangeCall__Outputs {
  _call: ConfirmBountyAmountChangeCall;

  constructor(call: ConfirmBountyAmountChangeCall) {
    this._call = call;
  }

  get changedBountyAmount_(): BigInt {
    return this._call.outputValues[0].value.toBigInt();
  }

  get previousBountyAmount_(): BigInt {
    return this._call.outputValues[1].value.toBigInt();
  }
}

export class ConstructorCall extends EthereumCall {
  get inputs(): ConstructorCall__Inputs {
    return new ConstructorCall__Inputs(this);
  }

  get outputs(): ConstructorCall__Outputs {
    return new ConstructorCall__Outputs(this);
  }
}

export class ConstructorCall__Inputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }

  get _valueToken(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get _utilityToken(): Address {
    return this._call.inputValues[1].value.toAddress();
  }

  get _stateRootProvider(): Address {
    return this._call.inputValues[2].value.toAddress();
  }

  get _bounty(): BigInt {
    return this._call.inputValues[3].value.toBigInt();
  }

  get _organization(): Address {
    return this._call.inputValues[4].value.toAddress();
  }

  get _gateway(): Address {
    return this._call.inputValues[5].value.toAddress();
  }

  get _burner(): Address {
    return this._call.inputValues[6].value.toAddress();
  }
}

export class ConstructorCall__Outputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }
}

export class ProgressMintCall extends EthereumCall {
  get inputs(): ProgressMintCall__Inputs {
    return new ProgressMintCall__Inputs(this);
  }

  get outputs(): ProgressMintCall__Outputs {
    return new ProgressMintCall__Outputs(this);
  }
}

export class ProgressMintCall__Inputs {
  _call: ProgressMintCall;

  constructor(call: ProgressMintCall) {
    this._call = call;
  }

  get _messageHash(): Bytes {
    return this._call.inputValues[0].value.toBytes();
  }

  get _unlockSecret(): Bytes {
    return this._call.inputValues[1].value.toBytes();
  }
}

export class ProgressMintCall__Outputs {
  _call: ProgressMintCall;

  constructor(call: ProgressMintCall) {
    this._call = call;
  }

  get beneficiary_(): Address {
    return this._call.outputValues[0].value.toAddress();
  }

  get stakeAmount_(): BigInt {
    return this._call.outputValues[1].value.toBigInt();
  }

  get mintedAmount_(): BigInt {
    return this._call.outputValues[2].value.toBigInt();
  }

  get rewardAmount_(): BigInt {
    return this._call.outputValues[3].value.toBigInt();
  }
}

export class ProgressMintWithProofCall extends EthereumCall {
  get inputs(): ProgressMintWithProofCall__Inputs {
    return new ProgressMintWithProofCall__Inputs(this);
  }

  get outputs(): ProgressMintWithProofCall__Outputs {
    return new ProgressMintWithProofCall__Outputs(this);
  }
}

export class ProgressMintWithProofCall__Inputs {
  _call: ProgressMintWithProofCall;

  constructor(call: ProgressMintWithProofCall) {
    this._call = call;
  }

  get _messageHash(): Bytes {
    return this._call.inputValues[0].value.toBytes();
  }

  get _rlpParentNodes(): Bytes {
    return this._call.inputValues[1].value.toBytes();
  }

  get _blockHeight(): BigInt {
    return this._call.inputValues[2].value.toBigInt();
  }

  get _messageStatus(): BigInt {
    return this._call.inputValues[3].value.toBigInt();
  }
}

export class ProgressMintWithProofCall__Outputs {
  _call: ProgressMintWithProofCall;

  constructor(call: ProgressMintWithProofCall) {
    this._call = call;
  }

  get beneficiary_(): Address {
    return this._call.outputValues[0].value.toAddress();
  }

  get stakeAmount_(): BigInt {
    return this._call.outputValues[1].value.toBigInt();
  }

  get mintedAmount_(): BigInt {
    return this._call.outputValues[2].value.toBigInt();
  }

  get rewardAmount_(): BigInt {
    return this._call.outputValues[3].value.toBigInt();
  }
}

export class ConfirmRevertStakeIntentCall extends EthereumCall {
  get inputs(): ConfirmRevertStakeIntentCall__Inputs {
    return new ConfirmRevertStakeIntentCall__Inputs(this);
  }

  get outputs(): ConfirmRevertStakeIntentCall__Outputs {
    return new ConfirmRevertStakeIntentCall__Outputs(this);
  }
}

export class ConfirmRevertStakeIntentCall__Inputs {
  _call: ConfirmRevertStakeIntentCall;

  constructor(call: ConfirmRevertStakeIntentCall) {
    this._call = call;
  }

  get _messageHash(): Bytes {
    return this._call.inputValues[0].value.toBytes();
  }

  get _blockHeight(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }

  get _rlpParentNodes(): Bytes {
    return this._call.inputValues[2].value.toBytes();
  }
}

export class ConfirmRevertStakeIntentCall__Outputs {
  _call: ConfirmRevertStakeIntentCall;

  constructor(call: ConfirmRevertStakeIntentCall) {
    this._call = call;
  }

  get staker_(): Address {
    return this._call.outputValues[0].value.toAddress();
  }

  get stakerNonce_(): BigInt {
    return this._call.outputValues[1].value.toBigInt();
  }

  get amount_(): BigInt {
    return this._call.outputValues[2].value.toBigInt();
  }
}

export class ProgressRedeemCall extends EthereumCall {
  get inputs(): ProgressRedeemCall__Inputs {
    return new ProgressRedeemCall__Inputs(this);
  }

  get outputs(): ProgressRedeemCall__Outputs {
    return new ProgressRedeemCall__Outputs(this);
  }
}

export class ProgressRedeemCall__Inputs {
  _call: ProgressRedeemCall;

  constructor(call: ProgressRedeemCall) {
    this._call = call;
  }

  get _messageHash(): Bytes {
    return this._call.inputValues[0].value.toBytes();
  }

  get _unlockSecret(): Bytes {
    return this._call.inputValues[1].value.toBytes();
  }
}

export class ProgressRedeemCall__Outputs {
  _call: ProgressRedeemCall;

  constructor(call: ProgressRedeemCall) {
    this._call = call;
  }

  get redeemer_(): Address {
    return this._call.outputValues[0].value.toAddress();
  }

  get redeemAmount_(): BigInt {
    return this._call.outputValues[1].value.toBigInt();
  }
}

export class ProgressRedeemWithProofCall extends EthereumCall {
  get inputs(): ProgressRedeemWithProofCall__Inputs {
    return new ProgressRedeemWithProofCall__Inputs(this);
  }

  get outputs(): ProgressRedeemWithProofCall__Outputs {
    return new ProgressRedeemWithProofCall__Outputs(this);
  }
}

export class ProgressRedeemWithProofCall__Inputs {
  _call: ProgressRedeemWithProofCall;

  constructor(call: ProgressRedeemWithProofCall) {
    this._call = call;
  }

  get _messageHash(): Bytes {
    return this._call.inputValues[0].value.toBytes();
  }

  get _rlpParentNodes(): Bytes {
    return this._call.inputValues[1].value.toBytes();
  }

  get _blockHeight(): BigInt {
    return this._call.inputValues[2].value.toBigInt();
  }

  get _messageStatus(): BigInt {
    return this._call.inputValues[3].value.toBigInt();
  }
}

export class ProgressRedeemWithProofCall__Outputs {
  _call: ProgressRedeemWithProofCall;

  constructor(call: ProgressRedeemWithProofCall) {
    this._call = call;
  }

  get redeemer_(): Address {
    return this._call.outputValues[0].value.toAddress();
  }

  get redeemAmount_(): BigInt {
    return this._call.outputValues[1].value.toBigInt();
  }
}

export class RevertRedeemCall extends EthereumCall {
  get inputs(): RevertRedeemCall__Inputs {
    return new RevertRedeemCall__Inputs(this);
  }

  get outputs(): RevertRedeemCall__Outputs {
    return new RevertRedeemCall__Outputs(this);
  }
}

export class RevertRedeemCall__Inputs {
  _call: RevertRedeemCall;

  constructor(call: RevertRedeemCall) {
    this._call = call;
  }

  get _messageHash(): Bytes {
    return this._call.inputValues[0].value.toBytes();
  }
}

export class RevertRedeemCall__Outputs {
  _call: RevertRedeemCall;

  constructor(call: RevertRedeemCall) {
    this._call = call;
  }

  get redeemer_(): Address {
    return this._call.outputValues[0].value.toAddress();
  }

  get redeemerNonce_(): BigInt {
    return this._call.outputValues[1].value.toBigInt();
  }

  get amount_(): BigInt {
    return this._call.outputValues[2].value.toBigInt();
  }
}

export class ProgressRevertRedeemCall extends EthereumCall {
  get inputs(): ProgressRevertRedeemCall__Inputs {
    return new ProgressRevertRedeemCall__Inputs(this);
  }

  get outputs(): ProgressRevertRedeemCall__Outputs {
    return new ProgressRevertRedeemCall__Outputs(this);
  }
}

export class ProgressRevertRedeemCall__Inputs {
  _call: ProgressRevertRedeemCall;

  constructor(call: ProgressRevertRedeemCall) {
    this._call = call;
  }

  get _messageHash(): Bytes {
    return this._call.inputValues[0].value.toBytes();
  }

  get _blockHeight(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }

  get _rlpParentNodes(): Bytes {
    return this._call.inputValues[2].value.toBytes();
  }
}

export class ProgressRevertRedeemCall__Outputs {
  _call: ProgressRevertRedeemCall;

  constructor(call: ProgressRevertRedeemCall) {
    this._call = call;
  }

  get redeemer_(): Address {
    return this._call.outputValues[0].value.toAddress();
  }

  get redeemerNonce_(): BigInt {
    return this._call.outputValues[1].value.toBigInt();
  }

  get amount_(): BigInt {
    return this._call.outputValues[2].value.toBigInt();
  }
}

export class ConfirmStakeIntentCall extends EthereumCall {
  get inputs(): ConfirmStakeIntentCall__Inputs {
    return new ConfirmStakeIntentCall__Inputs(this);
  }

  get outputs(): ConfirmStakeIntentCall__Outputs {
    return new ConfirmStakeIntentCall__Outputs(this);
  }
}

export class ConfirmStakeIntentCall__Inputs {
  _call: ConfirmStakeIntentCall;

  constructor(call: ConfirmStakeIntentCall) {
    this._call = call;
  }

  get _staker(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get _stakerNonce(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }

  get _beneficiary(): Address {
    return this._call.inputValues[2].value.toAddress();
  }

  get _amount(): BigInt {
    return this._call.inputValues[3].value.toBigInt();
  }

  get _gasPrice(): BigInt {
    return this._call.inputValues[4].value.toBigInt();
  }

  get _gasLimit(): BigInt {
    return this._call.inputValues[5].value.toBigInt();
  }

  get _hashLock(): Bytes {
    return this._call.inputValues[6].value.toBytes();
  }

  get _blockHeight(): BigInt {
    return this._call.inputValues[7].value.toBigInt();
  }

  get _rlpParentNodes(): Bytes {
    return this._call.inputValues[8].value.toBytes();
  }
}

export class ConfirmStakeIntentCall__Outputs {
  _call: ConfirmStakeIntentCall;

  constructor(call: ConfirmStakeIntentCall) {
    this._call = call;
  }

  get messageHash_(): Bytes {
    return this._call.outputValues[0].value.toBytes();
  }
}

export class RedeemCall extends EthereumCall {
  get inputs(): RedeemCall__Inputs {
    return new RedeemCall__Inputs(this);
  }

  get outputs(): RedeemCall__Outputs {
    return new RedeemCall__Outputs(this);
  }
}

export class RedeemCall__Inputs {
  _call: RedeemCall;

  constructor(call: RedeemCall) {
    this._call = call;
  }

  get _amount(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get _beneficiary(): Address {
    return this._call.inputValues[1].value.toAddress();
  }

  get _gasPrice(): BigInt {
    return this._call.inputValues[2].value.toBigInt();
  }

  get _gasLimit(): BigInt {
    return this._call.inputValues[3].value.toBigInt();
  }

  get _nonce(): BigInt {
    return this._call.inputValues[4].value.toBigInt();
  }

  get _hashLock(): Bytes {
    return this._call.inputValues[5].value.toBytes();
  }
}

export class RedeemCall__Outputs {
  _call: RedeemCall;

  constructor(call: RedeemCall) {
    this._call = call;
  }

  get messageHash_(): Bytes {
    return this._call.outputValues[0].value.toBytes();
  }
}
