specVersion: 0.0.1
schema:
  file: ./schema.graphql
dataSources:
  - kind: ethereum/contract
    name: Anchor
    network: mainnet
    source:
      address: "{{anchorAddress}}"
      abi: Anchor
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.2
      language: wasm/assemblyscript
      entities:
        - StateRootAvailable
      abis:
        - name: Anchor
          file: "{{{projectRoot}}}/abi/0.10/Anchor.json"
      eventHandlers:
        - event: StateRootAvailable(uint256,bytes32)
          handler: handleStateRootAvailable
      file: ./src/AnchorMapping.ts

  - kind: ethereum/contract
    name: EIP20CoGateway
    network: mainnet
    source:
      address: "{{eip20CoGatewayAddress}}"
      abi: EIP20CoGateway
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.2
      language: wasm/assemblyscript
      entities:
        - StakeIntentConfirmed
        - MintProgressed
        - GatewayProven
      abis:
        - name: EIP20CoGateway
          file: "{{{projectRoot}}}/abi/0.10/EIP20CoGateway.json"
      eventHandlers:
        - event: StakeIntentConfirmed(bytes32,address,uint256,address,uint256,uint256,bytes32)
          handler: handleStakeIntentConfirmed
        - event: MintProgressed(bytes32,address,address,uint256,uint256,uint256,bool,bytes32)
          handler: handleMintProgressed
        - event: GatewayProven(address,uint256,bytes32,bool)
          handler: handleGatewayProven
        - event: RedeemIntentDeclared(bytes32,address,uint256,address,uint256)
          handler: handleRedeemIntentDeclared
        - event: RedeemProgressed(bytes32,address,uint256,uint256,bool,bytes32)
          handler: handleRedeemProgressed
      file: ./src/EIP20CoGatewayMapping.ts
